[pytest]
# Вывод репортера html (должен быть установлен pytest-html)
# reruns - используется для повторного запуска неудачных тестов. (должен быть установлен pytest-rerunfailures)
# Значение, указанное после --reruns, определяет количество повторных попыток выполнения теста в случае его неудачи.
# alluredir - используется для хранения отчетов Allure, флаг clean очищает папку allure-results перед запуском тестов.
# browser - используется для запуска тестов в браузере, настраивается в фикстуре (firefox, chrome, webkit)
addopts = --html=test-results/test_report.html --reruns 2 --alluredir=test-results/allure-results --clean-alluredir

testpaths = tests

# Настройка логирования.
# Уровень логирования можно менять (INFO, DEBUG, WARNING, ERROR, CRITICAL).
# вывод логов в консоль
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s - %(name)s - %(levelname)s - %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S
# вывод и запись логов в файл
log_file = test-results/test.log
log_file_level = DEBUG
log_file_format = %(asctime)s - %(name)s - %(levelname)s - %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S
log_file_mode = w

# Пользовательские маркеры (необходимы для запуска "штучных" тестов. Команда: pytest -m <наименование маркера>)
markers =
    bonus: тест бонусной программы
    base_test: тест основного функционала - полный цикл
    promocode: тест промокодов



# Настройка цвета для ошибок логирования (требуется библиотека rich)
[pytest-logger]
colored_logs = True

# Выбор плагинов
# plugins = my_plugin

# Параметры для покрытия кода
# coverage = True  # Включить покрытие кода (нужен pytest-cov)

# Параметры для тестирования с использованием asyncio
# asyncio_mode = auto  # Установите режим asyncio (auto или strict)

# Установка параметров для pytest-xdist (распараллеливание тестов)
# numprocesses = 4  # Количество процессов для запуска тестов

# Дополнительные параметры для тестирования
# disable_warnings = True  # Отключить предупреждения


;# Шаблоны имен файлов, функций и классов
;python_files = test_*.py *_test.py  # Шаблоны имен файлов с тестами
;python_functions = test_*  # Шаблоны имен функций с тестами
;python_classes = Test*  # Шаблоны имен классов с тестами
;
;# Игнорируемые директории
;norecursedirs = .git __pycache__  # Директории, которые следует игнорировать